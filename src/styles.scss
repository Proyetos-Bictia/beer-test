
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$beer-test-primary: mat.define-palette(mat.$light-green-palette, 800, 700, 900);
$beer-test-accent: mat.define-palette(mat.$blue-palette);

// The warn palette is optional (defaults to red).
$beer-test-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$beer-test-theme: mat.define-light-theme((
  color: (
    primary: $beer-test-primary,
    accent: $beer-test-accent,
    warn: $beer-test-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($beer-test-theme);

/* You can add global styles to this file, and also import other style files */


*,
*:before,
*:after {
  box-sizing: inherit;
}

html, body { height: 100%; }
body { 
  margin: 0; 
  font-family: Roboto, "Helvetica Neue", sans-serif;
  background-color: #fafafa;
  figure, p {
    margin: 0;
  }
}

// Animaciones
.animated {
  animation-duration: 1.5s;
  animation-fill-mode: both;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.fadeIn {
  animation-name: fadeIn;
}


@keyframes backInLeft {
  0% {
    transform: translateX(-2000px) translateY(-900px);
    opacity: 0.7;
  }

  80% {
    transform: translateX(0px) translateY(0px);
    opacity: 0.7;
  }

  100% {
    opacity: 1;
  }
}

.backInLeft {
  animation-name: backInLeft;
}

@keyframes backInRight {
  0% {
    transform: translateX(-2000px);
    opacity: 0.7;
  }

  80% {
    transform: translateX(0px);
    opacity: 0.7;
  }

  100% {
    opacity: 1;
  }
}

.backInRight {
  animation-name: backInRight;
  animation-delay: 1s;
}
